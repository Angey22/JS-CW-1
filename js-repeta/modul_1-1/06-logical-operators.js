//! Видео - 1:57:25...2:09:10

/*
* Приведение к булю на примере Boolean(value)
*/
console.groupCollapsed('Приведение к булю - "Boolean(value)"'); //! Название группы

// Булевое преобразование, это когда любое значение другого типа данных (НЕ булевого типа данных) преобразовывается в - "true" или "folse" (в значение булевого типа данных).

// В основу правила преобразования в булевое значение лежит то, что при таком приобразовании к значению "false" приводит приобразование 6-и ложных (falsy) значений: 1) Число "0"; 2) Служебное значение "NaN"; 3) Служебное значение "null"; 4) Служебное значение "undefined"; 5) Пустая строка, выделенная одинарными '' или "" кавычками; 6) Булевое значение "false". Абсолютно все остальное - "приводится к true".

// То, что ВСЕГДА приобразовывается в "false"
console.log('То, что ВСЕГДА приобразовывается в "false":')
console.log('- число "0":', Boolean(0)); // => false
console.log('- значение "NaN":', Boolean(NaN)); // => false
console.log('- значение "null":', Boolean(null)); // => false
console.log('- значение "undefined":', Boolean(undefined)); // => false
console.log("- пустая строка '':", Boolean('')); // => false
console.log('- пустая строка "":', Boolean("")); // => false
console.log('- значение "false":', Boolean(false)); // => false

// Остальное, что ВСЕГДА приобразовывается в "true"
console.log('Примеры отсальных значений, которые приобразовываются в "true":')
console.log('- положительные числа "5":', Boolean(5)); // => true
console.log('- отрицательные числа "-5":', Boolean(-5)); // => true
console.log('- текст "qwe":', Boolean('qwe')); // => true
console.log('- значение "true":', Boolean(true)); // => true
console.log('- массивы "["Хрень", false, 3]":', Boolean(["Хрень", false, 3])); // => true

console.groupEnd(); //! Закрываем группу
console.log('-1----------------------------------------------');


/*
* Логическое И (оператор &&)
* - Запинается на лжи
* - Возвращает то, на чем запнулось (ложь) или последний операнд
*/
console.groupCollapsed('Логическое "И" (оператор - "&&"):'); //! Название группы

// Логическое "И" производит преобразование сравниваемых между собой данных в булевые значения, и после соответствующего преобразования - сравнивает между собой два булевых значения. При этом, если все преобразованные данные -> "true", то возвращается значение последнего операнда, а если какое-то значение -> "false", то возвращается "false" или то значение, которое в процессе приобразования привело к "false".

// Если все значения "истенные" (true)
console.log('- "5 && 5" ->', 5 && 5); // => число 5
console.log('- "qwe && 5" ->', 'qwe' && 5); // => число 5
console.log('- "qwe && abc" ->', 'qwe' && 'abc'); // => текс 'abc'
console.log('- "true && abc" ->', true && 'abc'); // => текс 'abc'
console.log('- "-1 && abc && 5 && true" ->', -1 && 'abc' && 5 && true); // => true

// Если одно или несколько значений "ложны" (false)
console.log('- "0 && 5" ->', 0 && 5); // => число 0
console.log('- "abc && false ->', 'abc' && false); // => false
console.log('- "0 && false ->', 0 && false); // => 0
console.log('- "NaN && false ->', NaN && false); // => NaN
console.log('- "-1 && abc && undefined && true" ->', -1 && 'abc' && undefined && true); // => undefined

console.groupEnd(); //! Закрываем группу
console.log('-2----------------------------------------------');


/*
* Логическое ИЛИ (оператор ||)
* - Запинаетс на правде
* - Возвращает то, на чем запнулось (правду) или последний операнд
*/
console.groupCollapsed('Логическое "ИЛИ" (оператор - "||"):'); //! Название группы

// Логическое "ИЛИ" производит преобразование сравниваемых между собой данных в булевые значения, и после соответствующего преобразования - ищет среди сравниваемых значнений хотя-бы одно "истенное" (true), и как только находит его - возвращает это значение. Если оно НЕ неходит ниодного "истинного" значения, то возвращает - последнее "ложное" значение

// Если все значения "истенные" (true)
console.log('- "5 || 5" ->', 5 || 5); // => число 5
console.log('- "qwe || 5" ->', 'qwe' || 5); // => текст 'qwe'
console.log('- "qwe || abc" ->', 'qwe' || 'abc'); // => текс 'qwe'
console.log('- "true || abc" ->', true || 'abc'); // => true
console.log('- "-1 || abc || 5 || true" ->', -1 || 'abc' || 5 || true); // => число -1

// Если одно или несколько значений "ложны" (false)
console.log('- "0 || 5" ->', 0 || 5); // => число 5
console.log('- "abc || false ->', 'abc' || false); // => текст 'abc'
console.log('- "0 || false ->', 0 || false); // => false
console.log('- "NaN || false ->', NaN || false); // => false
console.log('- "false || NaN || undefined || -1" ->', false || NaN || undefined || -1); // => число -1
console.log('- "false || NaN || undefined || 0" ->', false || NaN || undefined || 0); // => число 0

console.groupEnd(); //! Закрываем группу
console.log('-3----------------------------------------------');

/*
* Логический оператор НЕ (оператор !)
* Делает инверсию: "правда -> ложь" и "ложь -> правда"
*/
console.groupCollapsed('Логическое "НЕ" (оператор - "!"):'); //! Название группы

// Логическое "НЕ" производит преобразование соответствующих данных к булевому значению, после чего, выполняется инверсия (т.е. замена полученого значения на противоположное)
console.log('- !5 ->', !5); // => false
console.log('- !0 ->', !0); // => true
console.log('- !true ->', !true); // => false
console.log('- !NaN ->', !NaN); // => true

console.groupEnd(); //! Закрываем группу
console.log('-4----------------------------------------------');