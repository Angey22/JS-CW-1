/*
* JavaScript console.(log; table; group & groupEnd, groupCollapsed; warn, error & info; time);
* - "ручная" настройка стиля каждого отдельного выводимого "console.log-ом" сообщения.
*/


// Основной вариант вывода информации в консоль браузера, с помощью приставки "log" -> "console.log()".
console.log('Is this working?');
// Выводит строку, значение переменной или функции, один объект.
console.log('-1----------------------------------------------');

// Пример вывода нескольких объектов в одной строке
const foo = { id: 1, verified: true, color: 'green' };
const bar = { id: 2, verified: false, color: 'red' };
// Выводим полное описание объектов набора
console.log(foo, bar);
// Выводим краткое описание объектов набора
console.log({ foo, bar });
console.log('-2----------------------------------------------');


// Табличный вариант вывода информации в консоль браузера, с помощью приставки "table" -> "console.table()".
// Выводим в табличной форме содержимое одного объекта БЕЗ его имени
console.table(foo);
// Выводим в табличной форме содержимое одного объекта С его именем
console.table({ foo });
console.log('-3----------------------------------------------');

// Выводим набор объектов в табличном виде БЕЗ имен
console.table(foo, bar);
//! Ошибка вывода - выводится только первый объект.
// Выводим набор объектов в табличном виде С именами
console.table({ foo, bar });
console.log('-4----------------------------------------------');


// Группирование выводов с помошью приставки "group" -> "console.group(название группы)" в начале и служебной команды "console.groupEnd()" в конце выделенной таким образом группы выводов в консоль.
// Основная группа
console.group('User Details'); // Название группы
console.log('name: John Doe');
console.log('job: Software Developer');
// Подгруппа
console.group('Address'); // Название подгруппы
console.log('Street: 123 Townsend Street');
console.log('City: San Francisco');
console.log('State: CA');
console.groupEnd(); // Закрываем подгруппу
console.groupEnd(); // Закрываем группу
console.log('-5----------------------------------------------');


// Если нужно, что-бы по умолчанию вводимая группа была "закрыта", то используют приставку "groupCollapsed" -> "console.groupCollapsed()"
console.groupCollapsed('Закрытая группа'); // Название группы
console.log('имя: John Doe');
console.log('должность: Software Developer');
console.groupEnd(); // Закрываем группу
console.log('-6----------------------------------------------');


// Для изменения читабильности сообщений можна использовать приставки "warn, error & info" -> "console.warn", со стандартными настройками цвета и стиля соответствующих типов сообщений.
// Стандартный стиль сообщения - предупреждения.
console.warn('This is a warning message');
// Стандартный стиль сообщения - об ошибке.
console.error('This is an error message');
// Стандартный стиль информационного сообщения, которое ничем неотличается от обычного сообщения - "log".
console.info('This is an informational message');
console.log('-7----------------------------------------------');


// Когда необходимо проверить быстродействие выполняемых кодом операций и синхронизировать их, можно использовать приставку "time" -> "console.time()".
let i = 0;
console.time("While loop");
while (i < 1000000) {
  i++;
}
console.timeEnd("While loop");

console.time("For loop");
for (i = 0; i < 1000000; i++) {
  // For Loop
}
console.timeEnd("For loop");
console.log('-8----------------------------------------------');


// Если необходимо более "экзотическим" способом "разукрасить" сообщения в консоли, можно задать собственный стиль выводимых в консоль сообщений, используя для этого директиву "%c", чтобы добавить стиль к любому элементу "лога". Это можно использовать, чтобы различать вызовы API, пользовательские события и т.д.
console.log('%c Auth ', 
            'color: white; background-color: #2274A5', 
            'Login page rendered');
console.log('%c GraphQL ', 
            'color: white; background-color: #95B46A', 
            'Get user details');
console.log('%c Error ', 
            'color: white; background-color: #D33F49', 
            'Error getting user details');
//! Также можно задать размера шрифта (font-size), стиля шрифта (font-style) и другие CSS параметры выводимого в консоль сообщения.


//! "console.trace()" - выводит трассировку стека на консоль и показывает, как код закончился в определенный момент. Есть определенные методы, которые вы хотели бы вызывать только один раз, например, удаление из базы данных. console.trace() можно использовать, чтобы убедиться, что код ведет себя так, как мы хотим.
