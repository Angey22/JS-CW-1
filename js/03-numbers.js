/*
* - Парсинг числа с Namber.parsInt() и Namber.parsFloat()
*/

// Namber.parsInt() - с лева на прово 'парсит' переменную и возвращает значение целого числа, если целые числа присутствуют в соответствующей переменной. Если целых чисел нет, или в начале значения переменной стоит не число, а символ - то выдает "NaN" (символ точки "." - не воспринимает, и считает его НЕ числом)

// Простой парсинг значения переменной
let elementWidth = '50px';
// const result = Number.parseInt(elementWidth);
// console.log(result);

// Парсинг значения переменной "elementWidth" с последующим переопределением значения этой переменной с текстового формата '50px' на число '50px'
// elementWidth = Number.parseInt(elementWidth);
// console.log('elementWidth:', elementWidth);

// Namber.parsFloat() - работает так же, как и Namber.parsInt(), но при этом - включает в поиск символ точки - ".", и все цыфры стоящие после нее.
let elementHeight = '200.74px';
// elementHeight = Number.parseFloat(elementHeight);
// console.log('elementHeight:', elementHeight);

/*
* - Метод для "отсекания" от числа - 'число.toFixed()'
*/

// Предназначен для "отсекания" (НЕ округления) "ненужного" остатка числа, после точки в десятичной дроби. Позволяет указать - сколько знаков после точки остается.

// Пример использования
let salary = 1300.16472;
console.log('Перед отсечением "ненужного":', salary);
salary = salary.toFixed(2);
console.log('После отсечением "ненужного":', salary);
// Важной особенностью использования данного метода является то, что он возвращает - стороку, т.е. берет число, переводит его в строку и уже от строки - отсекает соответствующее количество символов "ненужного".

// Для перевода значения строки в число - используем метод 'Number()'
salary = Number(salary);
console.log('Преобразование в число:', salary);

// Пример записи выше написаных 2-х строк кода, в одну строку - по методу "Матрешки"
console.log('Преобразование в число (матрешка):', Number(salary.toFixed(2)));